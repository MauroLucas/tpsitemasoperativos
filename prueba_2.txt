#include <stdio.h>
#include <mpi.h>

int main(int argc, char *argv[])
{
    int rank, size, name_len,i;
    char processor_name[MPI_MAX_PROCESSOR_NAME];
    double start_time, end_time;
    int sum = 0;

    // Inicia el cronómetro antes de la inicialización de MPI
    start_time = MPI_Wtime();

    MPI_Init(&argc, &argv);

    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &size);
    MPI_Get_processor_name(processor_name, &name_len);

    // Bucle for con incremento hasta 1 millón
    for (i = 0; i < 1000000; i++) {
        sum += i;
    }

    MPI_Finalize();

    // Detiene el cronómetro después de la finalización de MPI
    end_time = MPI_Wtime();

    // Solo el nodo frontend (nodo 0) imprime el tiempo total
    if (rank == 0) {
        printf("El tiempo total de procesamiento es %f segundos\n", end_time - start_time);
    }

    return 0;
}